---
AWSTemplateFormatVersion: "2010-09-09"
Description: CodePipeline pipeline that deploys a CloudFormation stack automatically.

Parameters:
  ConnectionArn:
    Description: The CodeConnections ARN for your source repository.
    Type: String

Resources:
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref CodePipelineArtifactsBucket
        Type: S3
      ExecutionMode: QUEUED
      Name: !Sub "${AWS::StackName}-pipeline"
      PipelineType: V2
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: CodeConnections
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: "1"
              Configuration:
                ConnectionArn: !Ref ConnectionArn
                FullRepositoryId: cattlepoint/cne-deadmans-switch
                BranchName: main
              OutputArtifacts:
                - Name: SourceOutput
              RoleArn: !GetAtt CodePipelineSourceActionRole.Arn
              RunOrder: 1
          OnFailure:
            Result: RETRY
        - Name: Deploy
          Actions:
            - Name: CloudFormation
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND,CAPABILITY_NAMED_IAM
                StackName: !Sub "${AWS::StackName}DS"
                TemplatePath: SourceOutput::cne-deadmans-switch.yaml
                RoleArn: !GetAtt CloudFormationRole.Arn
                OutputFileName: output.json
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: DeployOutput
              RoleArn: !GetAtt CodePipelineDeployActionRole.Arn
              RunOrder: 1
          OnFailure:
            Result: ROLLBACK
          BeforeEntry:
            Conditions:
              - Result: FAIL
                Rules:
                  - Name: MyDeploymentWindowRule
                    RuleTypeId:
                      Category: Rule
                      Owner: AWS
                      Provider: DeploymentWindow
                      Version: "1"
                    Configuration:
                      Cron: "* * * * * ? *"
                      TimeZone: "PST"
    DependsOn:
      - CodePipelineRoleDefaultPolicy

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole

  CodePipelineRoleDefaultPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CodePipelineRoleDefaultPolicy
      Roles:
        - !Ref CodePipelineRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Resource:
              - !GetAtt CodePipelineArtifactsBucket.Arn
              - !Join
                - "/"
                - - !GetAtt CodePipelineArtifactsBucket.Arn
                  - "*"
          - Effect: Allow
            Action:
              - s3:PutObjectAcl
              - s3:PutObjectVersionAcl
            Resource:
              - !Join
                - "/"
                - - !GetAtt CodePipelineArtifactsBucket.Arn
                  - "*"
          - Effect: Allow
            Action: sts:AssumeRole
            Resource:
              - !GetAtt CodePipelineSourceActionRole.Arn
              - !GetAtt CodePipelineDeployActionRole.Arn

  CodePipelineSourceActionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:root
            Action: sts:AssumeRole

  CodePipelineSourceActionRoleDefaultPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CodePipelineSourceActionRoleDefaultPolicy
      Roles:
        - !Ref CodePipelineSourceActionRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: codestar-connections:UseConnection
            Resource: !Ref ConnectionArn
          - Effect: Allow
            Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Resource:
              - !GetAtt CodePipelineArtifactsBucket.Arn
              - !Join
                - "/"
                - - !GetAtt CodePipelineArtifactsBucket.Arn
                  - "*"
          - Effect: Allow
            Action:
              - s3:PutObjectAcl
              - s3:PutObjectVersionAcl
            Resource:
              - !Join
                - "/"
                - - !GetAtt CodePipelineArtifactsBucket.Arn
                  - "*"

  CodePipelineDeployActionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:root
            Action: sts:AssumeRole

  CodePipelineDeployActionRoleDefaultPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CodePipelineDeployActionRoleDefaultPolicy
      Roles:
        - !Ref CodePipelineDeployActionRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - cloudformation:*
            Resource: "*"
          - Effect: Allow
            Action: iam:PassRole
            Condition:
              StringEqualsIfExists:
                iam:PassedToService:
                  - cloudformation.amazonaws.com
            Resource: "*"
          - Effect: Allow
            Action:
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Resource:
              - !GetAtt CodePipelineArtifactsBucket.Arn
              - !Join
                - "/"
                - - !GetAtt CodePipelineArtifactsBucket.Arn
                  - "*"
          - Effect: Allow
            Action:
              - s3:PutObjectAcl
              - s3:PutObjectVersionAcl
            Resource:
              - !Join
                - "/"
                - - !GetAtt CodePipelineArtifactsBucket.Arn
                  - "*"

  CodePipelineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/codepipeline/${AWS::StackName}-pipeline"
      RetentionInDays: 14
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete

  CloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
                - codepipeline.amazonaws.com
            Action: sts:AssumeRole

  CloudFormationRoleDefaultPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CloudFormationDefaultPolicy
      Roles:
        - !Ref CloudFormationRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - cloudformation:*
            Resource: !Sub arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${AWS::StackName}DS
          - Effect: Allow
            Action: sts:AssumeRole
            Resource: !GetAtt CodePipelineRole.Arn
          - Effect: Allow
            Action:
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Resource:
              - !GetAtt CodePipelineArtifactsBucket.Arn
              - !Join
                - "/"
                - - !GetAtt CodePipelineArtifactsBucket.Arn
                  - "*"
          - Effect: Allow
            Action:
              - s3:PutObjectAcl
              - s3:PutObjectVersionAcl
            Resource:
              - !Join
                - "/"
                - - !GetAtt CodePipelineArtifactsBucket.Arn
                  - "*"
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codepipeline/${AWS::StackName}-pipeline
              - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codepipeline/${AWS::StackName}-pipeline:*

  CloudFormationRoleResourceCreationPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CloudFormationResourceCreationPolicy
      Roles:
        - !Ref CloudFormationRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: "*"
            Resource: "*"

  CodePipelineArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete

  CodePipelineArtifactsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref CodePipelineArtifactsBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Deny
            Principal:
              AWS: "*"
            Action: s3:*
            Resource:
              - !GetAtt CodePipelineArtifactsBucket.Arn
              - !Join
                - "/"
                - - !GetAtt CodePipelineArtifactsBucket.Arn
                  - "*"
            Condition:
              Bool:
                aws:SecureTransport: "false"
